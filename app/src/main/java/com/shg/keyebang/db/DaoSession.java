package com.shg.keyebang.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.shg.keyebang.services.sqlitemodel.CourseTableDB;
import com.shg.keyebang.services.sqlitemodel.TimeDB;
import com.shg.keyebang.services.sqlitemodel.TodoDB;

import com.shg.keyebang.db.CourseTableDBDao;
import com.shg.keyebang.db.TimeDBDao;
import com.shg.keyebang.db.TodoDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig courseTableDBDaoConfig;
    private final DaoConfig timeDBDaoConfig;
    private final DaoConfig todoDBDaoConfig;

    private final CourseTableDBDao courseTableDBDao;
    private final TimeDBDao timeDBDao;
    private final TodoDBDao todoDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        courseTableDBDaoConfig = daoConfigMap.get(CourseTableDBDao.class).clone();
        courseTableDBDaoConfig.initIdentityScope(type);

        timeDBDaoConfig = daoConfigMap.get(TimeDBDao.class).clone();
        timeDBDaoConfig.initIdentityScope(type);

        todoDBDaoConfig = daoConfigMap.get(TodoDBDao.class).clone();
        todoDBDaoConfig.initIdentityScope(type);

        courseTableDBDao = new CourseTableDBDao(courseTableDBDaoConfig, this);
        timeDBDao = new TimeDBDao(timeDBDaoConfig, this);
        todoDBDao = new TodoDBDao(todoDBDaoConfig, this);

        registerDao(CourseTableDB.class, courseTableDBDao);
        registerDao(TimeDB.class, timeDBDao);
        registerDao(TodoDB.class, todoDBDao);
    }
    
    public void clear() {
        courseTableDBDaoConfig.clearIdentityScope();
        timeDBDaoConfig.clearIdentityScope();
        todoDBDaoConfig.clearIdentityScope();
    }

    public CourseTableDBDao getCourseTableDBDao() {
        return courseTableDBDao;
    }

    public TimeDBDao getTimeDBDao() {
        return timeDBDao;
    }

    public TodoDBDao getTodoDBDao() {
        return todoDBDao;
    }

}
